// <auto-generated />
using DroneManagmentAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DroneManagmentAPI.Migrations
{
    [DbContext(typeof(DroneContext))]
    [Migration("20220827011229_alter table drone alter state and model to int")]
    partial class altertabledronealterstateandmodeltoint
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DroneManagmentAPI.Models.Drone", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<decimal>("BatteryCapacity")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("Model")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<decimal>("WeightLimit")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("ID");

                    b.ToTable("Drones");
                });

            modelBuilder.Entity("DroneManagmentAPI.Models.DroneMedications", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("Drone_ID")
                        .HasColumnType("int");

                    b.Property<int>("Medication_ID")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("Drone_ID");

                    b.HasIndex("Medication_ID");

                    b.ToTable("DroneMedications");
                });

            modelBuilder.Entity("DroneManagmentAPI.Models.Medication", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("ID");

                    b.ToTable("Medications");
                });

            modelBuilder.Entity("DroneManagmentAPI.Models.DroneMedications", b =>
                {
                    b.HasOne("DroneManagmentAPI.Models.Drone", "Drone")
                        .WithMany()
                        .HasForeignKey("Drone_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DroneManagmentAPI.Models.Medication", "Medication")
                        .WithMany()
                        .HasForeignKey("Medication_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drone");

                    b.Navigation("Medication");
                });
#pragma warning restore 612, 618
        }
    }
}
